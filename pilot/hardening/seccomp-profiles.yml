apiVersion: v1
kind: ConfigMap
metadata:
  name: shieldx-seccomp-profiles
  namespace: shieldx-system
data:
  shieldx-default.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "architectures": ["SCMP_ARCH_X86_64", "SCMP_ARCH_AARCH64"],
      "syscalls": [
        {
          "names": [
            "accept", "accept4", "access", "arch_prctl", "bind", "brk",
            "capget", "capset", "chdir", "chmod", "chown", "clone",
            "close", "connect", "dup", "dup2", "epoll_create", "epoll_ctl",
            "epoll_wait", "execve", "exit", "exit_group", "fchdir", "fchmod",
            "fchown", "fcntl", "fstat", "fsync", "ftruncate", "futex",
            "getcwd", "getdents", "getegid", "geteuid", "getgid", "getgroups",
            "getpeername", "getpgrp", "getpid", "getppid", "getrandom",
            "getsid", "getsockname", "getsockopt", "getuid", "ioctl",
            "listen", "lseek", "lstat", "madvise", "mmap", "mprotect",
            "munmap", "nanosleep", "newfstatat", "open", "openat", "pipe",
            "pipe2", "poll", "prctl", "pread64", "pwrite64", "read",
            "readlink", "readlinkat", "recvfrom", "recvmsg", "rt_sigaction",
            "rt_sigprocmask", "rt_sigreturn", "sched_getaffinity", "sched_yield",
            "sendmsg", "sendto", "set_robust_list", "setgid", "setgroups",
            "setsid", "setsockopt", "setuid", "shutdown", "sigaltstack",
            "socket", "socketpair", "stat", "statfs", "tgkill", "time",
            "uname", "unlink", "unlinkat", "wait4", "write"
          ],
          "action": "SCMP_ACT_ALLOW"
        }
      ]
    }
  
  shieldx-network.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "architectures": ["SCMP_ARCH_X86_64", "SCMP_ARCH_AARCH64"],
      "syscalls": [
        {
          "names": [
            "accept", "accept4", "bind", "connect", "epoll_create", "epoll_ctl",
            "epoll_wait", "getpeername", "getsockname", "getsockopt", "listen",
            "poll", "recvfrom", "recvmsg", "sendmsg", "sendto", "setsockopt",
            "shutdown", "socket", "socketpair", "read", "write", "close",
            "brk", "mmap", "munmap", "rt_sigaction", "rt_sigprocmask",
            "rt_sigreturn", "futex", "clone", "exit_group"
          ],
          "action": "SCMP_ACT_ALLOW"
        }
      ]
    }

  shieldx-database.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "architectures": ["SCMP_ARCH_X86_64", "SCMP_ARCH_AARCH64"],
      "syscalls": [
        {
          "names": [
            "read", "write", "open", "openat", "close", "lseek", "fstat",
            "fsync", "fdatasync", "ftruncate", "mmap", "munmap", "madvise",
            "brk", "rt_sigaction", "rt_sigprocmask", "rt_sigreturn", "futex",
            "clone", "exit_group", "getpid", "gettid", "tgkill", "poll",
            "epoll_create", "epoll_ctl", "epoll_wait", "socket", "connect",
            "sendto", "recvfrom", "setsockopt", "getsockopt", "fcntl"
          ],
          "action": "SCMP_ACT_ALLOW"
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shieldx-orchestrator
  namespace: shieldx-system
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shieldx-orchestrator
  template:
    metadata:
      labels:
        app: shieldx-orchestrator
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: localhost/shieldx-default
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: Localhost
          localhostProfile: shieldx-default.json
      containers:
      - name: orchestrator
        image: registry.shieldx.io/shieldx/orchestrator:v1.0.0
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shieldx-credits
  namespace: shieldx-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shieldx-credits
  template:
    metadata:
      labels:
        app: shieldx-credits
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: localhost/shieldx-database
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: Localhost
          localhostProfile: shieldx-database.json
      containers:
      - name: credits
        image: registry.shieldx.io/shieldx/credits:v1.0.0
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"