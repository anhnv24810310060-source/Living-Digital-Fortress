---
# Shadow Evaluation Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shadow-eval-service
  namespace: shieldx-prod
  labels:
    app: shadow-eval
    tier: business-logic
    managed-by: person3
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: shadow-eval
  template:
    metadata:
      labels:
        app: shadow-eval
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5005"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: shadow-eval-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: shadow-eval
        image: shieldx/shadow-eval:v1.0.0
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 5005
          protocol: TCP
        
        env:
        - name: PORT
          value: "5005"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: shadow-db-secret
              key: connection-string
        - name: SHADOW_API_KEY
          valueFrom:
            secretKeyRef:
              name: shadow-secrets
              key: api-key
        - name: BAYESIAN_SIMULATIONS
          value: "10000"
        - name: MIN_SAMPLE_SIZE
          value: "100"
        - name: CONFIDENCE_LEVEL
          value: "0.95"
        
        resources:
          requests:
            cpu: 300m
            memory: 384Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          failureThreshold: 20
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: shadow-eval-service
  namespace: shieldx-prod
  labels:
    app: shadow-eval
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 5005
    targetPort: http
    protocol: TCP
  selector:
    app: shadow-eval

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shadow-eval-hpa
  namespace: shieldx-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shadow-eval-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shadow-eval-service
  namespace: shieldx-prod

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: shadow-eval-netpol
  namespace: shieldx-prod
spec:
  podSelector:
    matchLabels:
      app: shadow-eval
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: orchestrator
    ports:
    - protocol: TCP
      port: 5005
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres-shadow
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
