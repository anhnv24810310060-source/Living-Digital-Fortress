# PERSON 1 Development Environment
# Docker Compose for Orchestrator & Ingress services with dependencies

version: '3.8'

services:
  # ============================================================================
  # Core Services (PERSON 1)
  # ============================================================================
  
  orchestrator:
    build:
      context: .
      dockerfile: docker/Dockerfile.orchestrator
    container_name: shieldx-orchestrator
    ports:
      - "8080:8080"
    environment:
      - ORCH_PORT=8080
      - ORCH_POLICY_PATH=/etc/shieldx/policy.json
      - ORCH_OPA_POLICY_PATH=/etc/shieldx/opa/routing.rego
      - ORCH_OPA_ENFORCE=1
      - ORCH_LB_ALGO=ewma
      - ORCH_IP_BURST=200
      - ORCH_P2C_CONN_PENALTY=5.0
      - ORCH_CB_THRESHOLD=5
      - ORCH_CB_BACKOFF_MS=5000
      - REDIS_ADDR=redis:6379
      - RATLS_ENABLE=false
      - ADMISSION_SECRET=${ADMISSION_SECRET:-dev-secret-12345}
      - ADMISSION_HEADER=X-ShieldX-Admission
      - LOG_LEVEL=info
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=orchestrator
    volumes:
      - ./policies:/etc/shieldx
      - ./data:/data
    networks:
      - shieldx-net
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 128M

  ingress:
    build:
      context: .
      dockerfile: docker/Dockerfile.ingress
    container_name: shieldx-ingress
    ports:
      - "8081:8081"
      - "8443:8443"
    environment:
      - INGRESS_PORT=8081
      - INGRESS_HTTPS_PORT=8443
      - POLICY_PATH=/etc/shieldx/policy.json
      - LOCATOR_URL=http://locator:5003
      - GUARDIAN_URL=http://guardian:9090
      - ORCHESTRATOR_URL=http://orchestrator:8080
      - REDIS_ADDR=redis:6379
      - RATLS_ENABLE=false
      - ADMISSION_SECRET=${ADMISSION_SECRET:-dev-secret-12345}
      - WCH_MAX_CHANNELS=10000
      - WCH_CHANNEL_TTL=15m
      - LOG_LEVEL=info
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=ingress
    volumes:
      - ./policies:/etc/shieldx
      - ./data:/data
      - ./certs:/certs:ro
    networks:
      - shieldx-net
    depends_on:
      - redis
      - orchestrator
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 128M

  # ============================================================================
  # Dependencies
  # ============================================================================
  
  redis:
    image: redis:7-alpine
    container_name: shieldx-redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - shieldx-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:15-alpine
    container_name: shieldx-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=shieldx
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev-password-12345}
      - POSTGRES_DB=shieldx
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    networks:
      - shieldx-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shieldx"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro

  # ============================================================================
  # Observability Stack
  # ============================================================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: shieldx-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./pilot/observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - shieldx-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: shieldx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-fortress123}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./pilot/observability/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./pilot/observability/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana-data:/var/lib/grafana
    networks:
      - shieldx-net
    depends_on:
      - prometheus
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: shieldx-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./pilot/observability/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4318:4318"   # OTLP HTTP receiver
      - "4317:4317"   # OTLP gRPC receiver
      - "8888:8888"   # Prometheus metrics
      - "13133:13133" # Health check
    networks:
      - shieldx-net
    restart: unless-stopped

  # ============================================================================
  # Mock Services (for development)
  # ============================================================================
  
  mock-guardian:
    image: mockserver/mockserver:latest
    container_name: shieldx-mock-guardian
    ports:
      - "9090:1080"
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/guardian-expectations.json
    volumes:
      - ./test/mocks/guardian-expectations.json:/config/guardian-expectations.json:ro
    networks:
      - shieldx-net
    restart: unless-stopped

  mock-locator:
    image: mockserver/mockserver:latest
    container_name: shieldx-mock-locator
    ports:
      - "5003:1080"
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/locator-expectations.json
    volumes:
      - ./test/mocks/locator-expectations.json:/config/locator-expectations.json:ro
    networks:
      - shieldx-net
    restart: unless-stopped

networks:
  shieldx-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
