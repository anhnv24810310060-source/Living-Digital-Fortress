version: '3.8'

services:
  pqc-service:
    build: .
    ports:
      - "8092:8092"
    environment:
      - PQC_SERVICE_PORT=8092
      - KYBER_ENABLED=true
      - PQC_API_KEY=${PQC_API_KEY:-default_pqc_key_change_in_production}
      - LOG_LEVEL=info
    volumes:
      - ./data:/app/data
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  pqc-service-x25519:
    build: .
    ports:
      - "8093:8092"
    environment:
      - PQC_SERVICE_PORT=8092
      - KYBER_ENABLED=false
      - PQC_API_KEY=${PQC_API_KEY:-default_pqc_key_change_in_production}
      - LOG_LEVEL=info
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-lb:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pqc-service
      - pqc-service-x25519
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    restart: unless-stopped

  hsm-simulator:
    image: softhsm:latest
    volumes:
      - hsm_data:/var/lib/softhsm
    environment:
      - SOFTHSM2_CONF=/var/lib/softhsm/softhsm2.conf
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
  hsm_data: